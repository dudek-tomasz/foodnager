---
/**
 * Sidebar Navigation Component (Desktop ‚â•1024px)
 * Persistent sidebar with logo, main navigation links, and CTA button
 */

interface Props {
  currentPath: string;
}

const { currentPath } = Astro.props;

// Funkcja pomocnicza do okre≈õlenia czy link jest aktywny
const isActive = (path: string) => {
  if (path === '/fridge') {
    return currentPath === '/' || currentPath === '/fridge';
  }
  return currentPath.startsWith(path);
};

// G≈Ç√≥wne linki nawigacyjne
const navLinks = [
  {
    href: '/fridge',
    label: 'Lod√≥wka',
    icon: 'üßä',
    isActive: isActive('/fridge'),
  },
  {
    href: '/recipes',
    label: 'Przepisy',
    icon: 'üìñ',
    isActive: isActive('/recipes'),
  },
  {
    href: '/history',
    label: 'Historia',
    icon: 'üìú',
    isActive: isActive('/history'),
  },
];
---

<aside class="sidebar">
  <!-- Logo -->
  <div class="sidebar-header">
    <a href="/fridge" class="logo-link">
      <div class="logo">
        <span class="logo-icon">üç≥</span>
        <span class="logo-text">Foodnager</span>
      </div>
    </a>
  </div>

  <!-- Navigation Links -->
  <nav class="sidebar-nav" aria-label="G≈Ç√≥wna nawigacja">
    <ul class="nav-list">
      {navLinks.map((link) => (
        <li>
          <a
            href={link.href}
            class:list={['nav-link', { active: link.isActive }]}
            aria-current={link.isActive ? 'page' : undefined}
          >
            <span class="nav-icon" aria-hidden="true">{link.icon}</span>
            <span class="nav-label">{link.label}</span>
          </a>
        </li>
      ))}
    </ul>
  </nav>

  <!-- CTA Button -->
  <div class="sidebar-footer">
    <a href="/recipes/search" class="cta-button">
      <span class="cta-icon" aria-hidden="true">üîç</span>
      <span class="cta-label">Znajd≈∫ przepis</span>
    </a>
  </div>
</aside>

<style>
  .sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 240px;
    height: 100vh;
    background-color: hsl(var(--sidebar));
    border-right: 1px solid hsl(var(--sidebar-border));
    display: flex;
    flex-direction: column;
    z-index: 40;
  }

  /* Hidden on mobile/tablet */
  @media (max-width: 1023px) {
    .sidebar {
      display: none;
    }
  }

  /* Header with logo */
  .sidebar-header {
    padding: 24px 16px;
    border-bottom: 1px solid hsl(var(--sidebar-border));
  }

  .logo-link {
    text-decoration: none;
    color: inherit;
  }

  .logo {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .logo-icon {
    font-size: 32px;
    line-height: 1;
  }

  .logo-text {
    font-size: 20px;
    font-weight: 700;
    color: hsl(var(--sidebar-foreground));
  }

  /* Navigation */
  .sidebar-nav {
    flex: 1;
    padding: 16px 8px;
    overflow-y: auto;
  }

  .nav-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .nav-link {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 12px 16px;
    border-radius: 8px;
    text-decoration: none;
    color: hsl(var(--sidebar-foreground));
    font-size: 15px;
    font-weight: 500;
    transition: background-color 150ms ease;
    position: relative;
  }

  .nav-link:hover {
    background-color: hsl(var(--sidebar-accent));
  }

  .nav-link:focus-visible {
    outline: 2px solid hsl(var(--sidebar-ring));
    outline-offset: 2px;
  }

  .nav-link.active {
    background-color: rgb(251 191 36 / 0.15); /* Amber with opacity */
    color: rgb(245 158 11); /* Amber 500 */
    font-weight: 600;
  }

  .nav-icon {
    font-size: 20px;
    line-height: 1;
    flex-shrink: 0;
  }

  .nav-label {
    flex: 1;
  }

  /* Footer with CTA */
  .sidebar-footer {
    padding: 16px;
    border-top: 1px solid hsl(var(--sidebar-border));
  }

  .cta-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    width: 100%;
    padding: 14px 20px;
    background: linear-gradient(135deg, rgb(245 158 11) 0%, rgb(217 119 6) 100%);
    color: white;
    border: none;
    border-radius: 10px;
    font-size: 15px;
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    transition: all 150ms ease;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  }

  .cta-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.2);
  }

  .cta-button:focus-visible {
    outline: 2px solid rgb(251 191 36);
    outline-offset: 2px;
  }

  .cta-button:active {
    transform: translateY(0);
  }

  .cta-icon {
    font-size: 18px;
    line-height: 1;
  }

  .cta-label {
    font-size: 15px;
  }
</style>

